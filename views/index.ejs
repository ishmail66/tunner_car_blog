<html lang="en" ng-app="StarterApp">

<head>
  <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/angular_material/1.0.0/angular-material.min.css">
  <link href="https://fonts.googleapis.com/css?family=Luckiest+Guy" rel="stylesheet">

  <meta name="viewport" content="initial-scale=1" />

  <style>
  h3{
  text-align: center;
}
section {
 
  width: 80%;
  margin: 0 auto;
  
}
section > div{
  
  text-align: center;
  

}
.amat{
  min-height:100vh;
}
md-dialog{
  min-width:400px;
}
md-dialog form{
  padding:15px;
  margin-top:30px;
}
md-input-container .md-input-messages-animation{
  max-width:300px;
}
h1{
  font-size: 45px;
}
h2{
  text-align: center;
}
.md-card-image{
 width: 100%;
    height: 100%;
    display: inline-block;
}

#banner{
  background-image: url("http://1.bp.blogspot.com/-ZQ4OkBfUgas/UWxfX5N5D5I/AAAAAAAAao0/k9S2CThiNFs/s1600/Nissan+Skyline+GT-R++1968-1972.jpg" );
  height: 100%;
  background-color:rgb(146, 146, 146);
  background-size: cover;
  background-blend-mode: multiply; 
  
}

#banner h2{
  font-family: 'Luckiest Guy', cursive;
  font-size: 100px;
  text-shadow: -1px 0 white, 0 1px white, 1px 0 white , 0 -1px white}

#banner p{
  color: aliceblue;
  font-size: 25px;
  text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;
}

  </style>
</head>

<!--start with a column layout, nest a row layout inside for the content-->

<body layout="column" ng-controller="AppCtrl">

  <!--our first material directive, a simple toolbar -->
  <md-toolbar>
    <div class="md-toolbar-tools">
      
      <!-- fill up the space between left and right area -->
      <span flex></span>
      <div ng-hide="loggedIn">
      
      
        <md-input-container>
          <label>email</label>
          <input ng-model="user.email">
        </md-input-container>
        <md-input-container>
          <label>Password</label>
          <input ng-model="user.password" type="password">
        </md-input-container>
        <md-button ng-click="showPrompt()" class="md-raised">Login</md-button>
              </div>
        
        <div ng-hide="loggedIn==false">
          <md-button ng-click="logout()" class="md-raised">Logout </md-button>
          <md-button>hOME</md-button>
          <md-button>ARCHIVE</md-button>
          <md-button>CREATE</md-button>
        </div>
         
    </div>
  </md-toolbar>
<div id="content">
  
  
  <section ng-show="!loggedIn">
    <h1>You should log in if you want to see this content</h1>
  </section>
  
  <!--this section is the second cell of a column-->
  <section ng-show = "loggedIn" class="amat" layout="row" flex>
  

    <div flex layout-padding>
      <div id="banner">
      <h2 class="md-display-2">TUNER CAR BLOG</h2>
      <p>Car tuning is the modification of the performance or appearance of a vehicle. For actual "tuning" in the sense of automobiles or vehicles, see engine tuning. Most vehicles stay the factory set up for an average driver's expectations and conditions. Tuning, on the other hand, has become a way to personalize the characteristics of a vehicle to the owner's preference. Cars may be altered to provide better fuel economy, produce more power, or provide better handling and driving.

          Car tuning is related to auto racing, although most performance cars never compete. Tuned cars are built for the pleasure of owning and driving. Exterior modifications include changing the aerodynamic characteristics of the vehicle via side skirts, front and rear bumpers, spoilers, splitters or air vents and lightweight wheels.</p>
    </div>
  </div>
  </section>
  </div>
  <script type="text/ng-template" id="login.tmpl.html">
  <md-dialog aria-label="Home Monitor Login" md-theme="login">
      <md-toolbar>
        <div class="md-toolbar-tools">
          <h2>{{dialogPromptMessage}}</h2>
          <span flex></span>
          <md-button class="md-icon-button" ng-click="cancel()">X
          </md-button>
        </div>
      </md-toolbar>

      <md-dialog-content style="max-width:500px;max-height:600px; ">
        <form name="accountLogin">

          <md-input-container class="md-block">
            <label>eMail</label>
            <input ng-model="user.email" type="email" name="email" minlength="10" required>
          </md-input-container>
          <md-input-container class="md-block">
            <label>Password</label>
            <input ng-model="user.password" type="password" name="company">
          </md-input-container>
        </form>
      </md-dialog-content>
     <md-dialog-actions layout="row" md-whiteframe="2">
   
   <span flex> </span>
      
   <md-button ng-click="cancel()">Cancel </md-button>

    <md-button ng-click="login(user.email, user.password)" md-autofocus class="md-raised md-primary"> Login </md-button>
		</md-dialog-actions>

    </md-dialog>
  </script>
  
  
  
  <!-- Angular Material Dependencies -->
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-animate.min.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-aria.min.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-messages.min.js"></script>
  
  <script src="https://www.gstatic.com/firebasejs/3.2.1/firebase.js"></script>

<!-- AngularFire -->
<script src="https://cdn.firebase.com/libs/angularfire/2.0.1/angularfire.min.js"></script>

  <!-- Angular Material Library -->
  <script src="https://ajax.googleapis.com/ajax/libs/angular_material/1.0.0/angular-material.min.js"></script>

  <script src="//cdn.jsdelivr.net/angular-material-icons/0.4.0/angular-material-icons.min.js"></script>
  <script>
  /*
Module 4, Lesson 9, 
*/

 // Initialize Firebase
 var config = {
    apiKey: "AIzaSyBPhetZEfn-qcf7TYtiupdFpt_qoFKkHzA",
    authDomain: "mi-solutionsdemo.firebaseapp.com",
    databaseURL: "https://mi-solutionsdemo.firebaseio.com",
    storageBucket: "mi-solutionsdemo.appspot.com",
  };
  firebase.initializeApp(config);

//create the app, bring in material module
var app = angular.module('StarterApp', ['ngMaterial', 'firebase']).config(function($mdThemingProvider) {
  $mdThemingProvider.theme('default')
    .primaryPalette('blue')
    .accentPalette('orange');
});
app.constant('firebaseURL', 'rooms');

app.factory('rooms', function(temperatureService, $firebaseArray) {
  return $firebaseArray(temperatureService.getFB() );
});
app.factory('auth', function(temperatureService, $firebaseAuth){
  return $firebaseAuth( temperatureService.getAuth() )
})

//make the application controller
app.controller('AppCtrl', ['$scope', '$mdSidenav', '$mdDialog', '$mdToast', 'rooms', 'auth', function($scope, $mdSidenav, $mdDialog, $mdToast, rooms, auth){
                           
                           
  //make a variable to hold the room objects
  $scope.rooms = rooms;
  $scope.currentRoom = {};
  $scope.currentRoom.content = "New content";                         
  //create a user object to contain the password and email
  $scope.user = {};
  $scope.loggedIn =false;
                           
    //default message
     $scope.dialogPromptMessage = "Please log in.";                      
                           
                           
  //reveals the dialog box
$scope.showPrompt = function($event) {
  $mdDialog.show({
    controller: 'AppCtrl',
    templateUrl: 'login.tmpl.html',
    parent: angular.element(document.body),
    clickOutsideToClose: true
  });
}
$scope.cancel = function(){
           $mdDialog.hide();                
 }                   
                           
                           
                           
  //listen for authentication changes (log in , log out)
  auth.$onAuthStateChanged(function(userAuth){
         console.log
                           
                           
              if(userAuth){
                           
              //authenticated   
              $scope.loggedIn = true;
              $scope.cancel();
              showSimpleToast("You are logged in.");
         }else{
              //not authenticated     
              $scope.loggedIn = false;
              showSimpleToast("You must log in.");
         }            
  })
                           
  //Add simple toast function, I think this is the righ place
 function showSimpleToast (message){
  var elem = document.getElementById('content')
                           
  $mdToast.show(
  $mdToast.simple()
  .textContent(message)
  .parent(elem) 
  .position("top right")
  .hideDelay(5000)
  .capsule(true)                         
  );                         
  }
  //showSimpleToast("Hello people");                         
                           
  $scope.toggleSidenav = function(name) {
    console.log('Toggling navigation');
    $mdSidenav(name).toggle();
  }
  $scope.updateContent = function(room){
    console.log('Updating the content area');
    console.log(room)
    $scope.currentRoom = room;
  }
                           
  //create a function for login purposes, add it to the $scope
  $scope.login = function(){
     var email = $scope.user.email;
     var password = $scope.user.password;
     auth.$signInWithEmailAndPassword(email, password).then(function(user){
        //person logged in
         console.log(user);
     }).catch(function(error){
         //got an error
         console.log(error); 
         switch(error.code){
           case "auth/user-not-found": 
              $scope.dialogPromptMessage = "Registering you...";             
              $scope.register();             
           break;
           case "auth/invalid-email":
                $scope.dialogPromptMessage = "Bad email, try again."            
              alert("Invalid Email");       
           break;
           case "auth/wrong-password":
                $scope.dialogPromptMessage = "Incorrect password, try again.";            
                           
               alert("Incorrect password");
           break;
           default:  
              alert("Error in login, try again later");
         }                  
     })
  }
                           
  $scope.register = function(){
   console.log("Trying to register");
   var email = $scope.user.email;
   var password = $scope.user.password;
   auth.$createUserWithEmailAndPassword(email, password).then(function(user){
             //success   
             console.log("success at registering")
             $scope.login();
                           
   }).catch(function(error){
            //failure  
            console.log("Failed at registering");
            console.log(error);   
            switch(error.code){
              case "auth/email-already-in-use":
                  alert("That is email is taken.");
              break;
              case "auth/invalid-email":
                  alert("Invalid email. Try again. Human.");
              break;
              default:
                  alert("Registration is off. Try later.");
              }
     })
  }
                           
  $scope.logout=function(){
      auth.$signOut();                     
  }                    
                           
}])
//End of the controller


/*
temperatureService creates two connection to firebase. One is for data. One is for authentication.
*/

app.service('temperatureService', ['firebaseURL', function(firebaseURL) {
  //connect for data from the database
  var ref = firebase.database().ref(firebaseURL);
  //connect for authentication
  var authRef = firebase.auth();
                                   
  return {
      getFB: function() {
          return ref;
      },
      getAuth: function(){
        return authRef;                           
     }
  };
}]);
  
  </script>
</body>

</html>
